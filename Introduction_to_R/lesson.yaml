- Class: meta
  Course: Getting Started
  Lesson: Introduction to R
  Author: Larry Pace
  Type: Standard
  Organization: Keiser University
  Version: 2.2.21
  
- Class: text
  Output: Hi, I'm Dr. Larry Pace, your instructor for this series of lessons on how to use R for the behavioral and social sciences. I am happy to be working with you and would appreciate any feedback you might have on these lessons.

- Class: text
  Output: In this introductory lesson, we will discuss some of the basics of R. I highly recommend that you use RStudio for these lessons, although they will work fine with the regular version of R as well.

- Class: text
  Output: In R, everything is an "object" of some sort. We also work with "functions" in R. This makes R simultaneously object-oriented and functional. In this lesson, you will get a better feeling for functions and objects and how they work. R is a programming language and statistical computing environment rolled into one. The most basic use of R is as an interactive calculator. In R, the command prompt is >. It is R's way of telling you it is ready for your instructions. You type a command or expression, and R attempts to do what you have asked. If R can do it, it wil. If R does not understand what you are asking, it will throw an error. Sometimes, R does what you have asked, but gives you one or more warnings that something may not be quite right.

- Class: cmd_question
  Output: To R, even a single number or character is a "vector." Other languages allow you to define a constant or scalar value, but R does not. To see what I mean, at the command prompt, type 2 + 2 and press Enter.
  CorrectAnswer: 2 + 2
  AnswerTests: omnitest(correctExpr = '2 + 2')
  Hint: Type 2 + 2 and press Enter.

- Class: text
  Output: Note the [1] in front of the answer to your addition problem. It is an index telling you that to R, 4 is a vector of length 1. R makes use of "vectorization" in many ways that help with statistical computations, and help you avoid explicit looping in many cases.

- Class: cmd_question
  Output: Let's create an object called x and assign the result of our addition to that object. The assignment operator in R is <-, the combination of a "less than" sign and a dash. Think of it as a leftward-pointing arrow. Whatever is on the right side is assigned to the "object" on the left side. At the command prompt, type x <- 2 + 2 and press Enter.
  CorrectAnswer: x <- 2 + 2
  AnswerTests: omnitest(correctExpr = 'x <- 2 + 2')
  Hint: Type x <- 2 + 2 and press Enter.

- Class: text
  Output: In this case, R did not print your answer, but you can see the contents of an R object by typing its name and pressing Enter.

- Class: cmd_question
  Output: At the command prompt, type x and press Enter.
  CorrectAnswer: x
  AnswerTests: omnitest(correctExpr = 'x')
  Hint: Type x and press Enter.

- Class: cmd_question
  Output: One of the important functions you should learn in R is str(). It will tell you about the structure of an R object. For more complex objects, you will get more information than for simple objects. Type str(x) at the command prompt and press Enter.
  CorrectAnswer: str(x)
  AnswerTests: omnitest(correctExpr= 'str(x)')
  Hint: Type str(x) and press Enter.

- Class: cmd_question
  Output: Correct. This tells us x is a numeric object with the value of 4. Like str(), the math operators in R are also functions themselves. These functions include addition, subtraction, multiplication, division, and exponentiation. Let's practice each of these functions with our named object x. At the command prompt, type x + 2 and press Enter.
  CorrectAnswer: x + 2
  AnswerTests: omnitest(correctExpr= 'x + 2')
  Hint: Type x + 2 and press Enter.

- Class: cmd_question
  Output: Now, let's try subtracting x from itself. Type x - x and press Enter.
  CorrectAnswer: x - x
  AnswerTests: omnitest(correctExpr = 'x - x')
  Hint: Type x - x and press Enter.

- Class: cmd_question
  Output: Let's multiply x by itself. Type x * x and press Enter.
  CorrectAnswer: x * x
  AnswerTests: omnitest(correctExpr = 'x * x')
  Hint: Type x * x and press Enter.

- Class: cmd_question
  Output: Now, divide x by itself. You should be able to predict the answer. Type x / x and press Enter.
  CorrectAnswer: x / x
  AnswerTests: omnitest(correctExpr = 'x / x')
  Hint: Type x / x and press Enter.
  
- Class: cmd_question
  Output: R follows the standard order of operations in evaluating mathematical expressions. You can use parentheses to control the order in which math is performed. For example, in R, the symbol ^ is used for exponentiation. Evaluate the expression (2 + 3) - (2^2 * 3 - 2).
  CorrectAnswer: (2 + 3) - (2^2 * 3 - 2)
  AnswerTests: omnitest(correctExpr = '(2 + 3) - (2^2 * 3 - 2)')
  Hint: Type (2 + 3) - (2^2 * 3 - 2) and press Enter.

- Class: cmd_question
  Output: Now, type (2 + 3 - 2^2) * (3 - 2). Will you get the same answer as before?
  CorrectAnswer: (2 + 3 - 2^2) * (3 - 2)
  AnswerTests: omnitest(correctExpr = '(2 + 3 - 2^2) * (3 - 2)')
  Hint: Type (2 + 3 - 2^2) * (3 - 2) and press Enter.

- Class: text
  Output: Exactly. The answers are different becase the expressions were evaluated in different order. 

